/* use "*" to set universal box-sizing
https://www.w3schools.com/cssref/css3_pr_box-sizing.asp
*/
* {
  box-sizing: border-box;
}
/* 16/1.3 = font-size and line-height together. */
body {
  font: 16pt/1.3 "Assistant", sans-serif;
  color: #333;
}

/* apply following font to all following tags */
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Hammersmith One", Arial, sans-serif;
  font-weight: normal;
}

h2 {
  font-size: 2.25rem;
}
/* Main grid layout, we apply it in layouts/index.js on article 
min-width: if the content is smaller than the minWidth, minWidth size
is applied, ignored if content is larger than min-width.
*/
.container {
}

.container--centered {
  margin: 0 auto;
  padding: 20px;
  min-width: 1000px;
}
/* main grid layout  */
.grid {
  display: grid;
}

.grid-4col {
  grid-template-columns: repeat(4, 1fr);
}
.grid-6col {
  grid-template-columns: repeat(6, 1fr);
}
/* format logo in index.re
The grid-template-rows CSS property defines the line names 
and track sizing functions of the grid rows.
gtc splits the component where applied into two columns, here o 70 and 30 %  of 
available area.
*/

/* home page header section
Define background color, bgrd image and size
*/
.teaser {
  /* background-color: #99d1de; */
  padding-bottom: 120px;

  background: url(../assets/teaser-bg.png) no-repeat;
  background-size: cover;
}
/* grid settings for .teaser */
.teaser--wrapper {
  display: grid;
  grid-gap: 20px;
  grid-template-columns: 70% 30%;
  grid-template-rows: 260px auto;
  grid-template-areas:
    "logo dates"
    "text ...";
}
/* push logo to so that aligns to end/rights side of div with no margin */
.teaser--logo {
  grid-area: logo;
  align-self: end;
  margin: 0;
}

.teaser--aside {
  align-self: end;
  grid-area: dates;
  font-family: "Hammersmith One", Arial, sans-serif;
}

.teaser--text {
  font-size: 1.5rem;
}

.teaser--button {
}
/* uses repeat
see: https://alligator.io/css/css-grid-layout-repeat-notation/
so gtc: 1fr, 1fr, 1fr 1fr becomes gtc: repeat(4, 1fr)
*/
/* Speakers list grid */
.speaker-list {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 20px;
  margin: 0;
  padding: 0;
}

.speaker-list--item {
  margin: 0;
  padding: 0;
  list-style: none;
}

/* single speaker block */
.speaker {
  position: relative;
  margin: 0;
}
/* in nested div, like our list of speakers, 
use '>' to apply img style to descendants of the div in which we call it,
so, if we call this in speaker, find img tag nested in .speaker 
and apply this style. https://stackoverflow.com/questions/4459821/css-selector-what-is-it

z-index: specify stack order of element, so within this div, always place the img div
before the other elements in div like name and company, in this case
*/
.speaker > img {
  position: relative;
  z-index: 1;
}
/* apply following style to figcaption nested in div with .speaker class.
Also, this div will show after img because of img's z-index.
*/
.speaker > figcaption {
  position: relative;
  top: -2rem;
  left: 20px;
  padding: 2rem 20px 20px 20px;
  background: #fff;
}

.speaker--name {
  margin: 0.5em 0;
  font-size: 1rem;
}

.speaker--company {
  margin: 0;
  font-size: 0.75rem;
}

/* Footer */
footer {
  grid-area: footer;
  font-size: 0.9rem;
}

.footer--about {
  grid-column: 1 / span 2;
}

.copyright {
  grid-column-end: span 2;
  text-align: right;
}
